
Práctica 3 SWAP: "BALANCEO DE CARGA"

Jose Manuel Martínez de la Insua
Ángel Valera Motos

Para nuestra práctica vamos a utilizar una máquina con nginx como balanceador y 2 máquinas conectadas al balanceador
por una red interna (ambas máquinas con ubuntu server).

1. - Instalación de "nginx" en Ubuntu Server.

	- Importamos la clave del repositorio software. 

	$ cd /tmp/

	$ wget http://nginx.org/keys/nginx_signing.key apt-get add /tmp/nginx_signing.key

	$ rm -f /tmp/nginx_signing.key

Asegurar que el balanceador no tiene apache instalado ya que ocupa el puerto 80 y éste lo necesitaremos para
instalar el software de balanceo (si lo tiene instalado hay que matar los procesos apache, por problemas de conflictos 
entre máquinas) y asegurar también que el balanceador puede ver a las otras máquinas en una red interna.

El esquema sería el siguiente: una máquina actuando como balanceador (con acceso a internet para recibir las peticiones) y
otras dos máquinas sin acceso a internet pero conectadas por red interna con el balanceador y entre ellas.


2.- Modificar el fichero etc/nginx/conf.d/default.conf

	upstream apaches {
 		server 192.168.56.101;
		server 192.168.56.102;	
	}

	server{
 		listen 80;
 		server_name m3lb;
 		access_log /var/log/nginx/m3lb.access.log;
 		error_log /var/log/nginx/m3lb.error.log;
 		root /var/www/;
 		location /
 		{
 			proxy_pass http://apaches;
 			proxy_set_header Host $host;
 			proxy_set_header X-Real-IP $remote_addr;
 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 			proxy_http_version 1.1;
 			proxy_set_header Connection "";
 		}
	}

A continuación reiniciamos el servicio con el comando:

	$ service restart nginx

Comprobamos que balancea la carga con el comando :

	$ curl http://192.168.56.103/hola.html        --------->  ejecutamos éste comando en una máquina nueva.

Podemos ver el resultado del balanceo en el archivo adjunto Balanceo_Nginx.png en el directorio de trabajo.

Una vez comprobado que balancea, vamos a añadirle peso a cada máquina para establecer la prioridad con la que se asignan
tareas; en nuestro caso:

	upstream apaches {
 		server 192.168.56.101 weight=1;
		server 192.168.56.102 weight=2;	
	}

El resultado lo podemos ver en la captura de pantalla Balanceo_Nginx_peso.png

Ahora hemos probado el balanceo por ip de la siguiente forma:

	upstream apaches {
		ip_hash;
 		server 192.168.56.101;
		server 192.168.56.102;	
	}

Ahora el balanceador nos asigna la máquina 2 y siempre nos atiende la misma, el resultado lo podemos ver en :
B_Nginx_iphash.png



Balanceo de carga con Haproxy:

Antes de empezar con la instalación, debemos parar el servicio Nginx con el comando:

	$ service nginx stop

1.- Instalación de balanceador haproxy:

	$ apt-get install haproxy joe

2.- Configuración de haproxy

	$ cd /etc/haproxy

 Modificamos el fichero haproxy.cfg (usando joe) de la siguiente forma:

global
	daemon
	maxconn 256

defaults
	mode http
	contimeout 4000
	clitimeout 42000
	srvtimeout 43000
	frontend http-in
	bind *:80
	default_backend servers

backend servers
	server m1 172.16.168.130:80 maxconn 32
	server m2 172.16.168.131:80 maxconn 32 


Una vez configurado, lanzamos el servicio con el comando:

	$ sudo /usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg

Ahora probamos que nuestro balanceador haproxy funciona con el comando curl, y podemos ver el resultado en 
la captura: B_Haproxy.png


